{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","connection":"keep-alive","content-encoding":"gzip","content-type":"text/html; charset=utf-8","date":"Thu, 17 Oct 2024 13:48:01 GMT","etag":"W/\"9810-m5iSfEQ1uDjcT2MXWW6pewYKiyA\"","nel":"{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}","report-to":"{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1729172881&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=CwogEB6BbW3iONwQ0Utx%2BJnNxzFCbtHMGoOzUS4Mchc%3D\"}]}","reporting-endpoints":"heroku-nel=https://nel.heroku.com/reports?ts=1729172881&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=CwogEB6BbW3iONwQ0Utx%2BJnNxzFCbtHMGoOzUS4Mchc%3D","server":"BobTheBuilder","strict-transport-security":"max-age=15552000; includeSubDomains","transfer-encoding":"chunked","vary":"Accept-Encoding","via":"1.1 vegur","x-content-type-options":"nosniff","x-dns-prefetch-control":"off","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-powered-by":"Cats on Keyboards","x-ratelimit-limit":"100","x-ratelimit-remaining":"99","x-ratelimit-reset":"1729172888","x-xss-protection":"1; mode=block"},"body":"","status":200,"url":"https://dummyjson.com/docs/products?sortBy=price&order=desc"},"revalidate":31536000,"tags":[]}